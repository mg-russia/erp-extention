
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	
	// регистр _ГарантийныеЗапросы Приход
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		
		//Если НЕ ЗначениеЗаполнено(ТекСтрокаТовары.Номенклатура) Тогда Продолжить; КонецЕсли;
		
		Движение = Движения._ГарантийныеЗапросы.Добавить();
		Движение.ВидДвижения       = ВидДвиженияНакопления.Приход;
		Движение.Период            = Дата;
		Движение.ГарантийныйЗапрос = Ссылка;
		Движение.Номенклатура      = ?(ЗначениеЗаполнено(ТекСтрокаТовары.Номенклатура), ТекСтрокаТовары.Номенклатура,  ТекСтрокаТовары.ВнешнийКод);
		Движение.Количество        = ТекСтрокаТовары.Количество;
		
		Если ТекСтрокаТовары.РезультатРассмотрения = Перечисления._РезультатыРассмотренияГарантии.Отклонено Тогда
			Движение = Движения._ГарантийныеЗапросы.Добавить();
			Движение.ВидДвижения       = ВидДвиженияНакопления.Расход;
			Движение.Период            = Дата;
			Движение.ГарантийныйЗапрос = Ссылка;
			Движение.Номенклатура      = ?(ЗначениеЗаполнено(ТекСтрокаТовары.Номенклатура), ТекСтрокаТовары.Номенклатура,  ТекСтрокаТовары.ВнешнийКод);
			Движение.Количество        = ТекСтрокаТовары.Количество;
		КонецЕсли;
		
	КонецЦикла;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр _НекомплектныеМашины Приход
	Для Каждого ТекСтрокаСнятыеЧасти Из СнятыеЧасти Цикл
		Движение                   = Движения._НекомплектныеМашины.Добавить();
		Движение.ВидДвижения       = ВидДвиженияНакопления.Приход;
		Движение.Период            = Дата;
		Движение.НоменклатураДонор = НоменклатураДонор;
		Движение.СерийныйНомер     = Справочники.СерийныеНомера.НайтиПоКоду(СокрЛП(СерийныйНомерДонор),,,НоменклатураДонор);
		Движение.Номенклатура      = ТекСтрокаСнятыеЧасти.Номенклатура;
		Движение.КодСтроки         = ТекСтрокаСнятыеЧасти.КодСтроки;
		Движение.Количество        = ТекСтрокаСнятыеЧасти.Количество;
		Если ТекСтрокаСнятыеЧасти.Возвращено Тогда 
			Движение                   = Движения._НекомплектныеМашины.Добавить();
			Движение.ВидДвижения       = ВидДвиженияНакопления.Расход;
			Движение.Период            = Дата;
			Движение.НоменклатураДонор = НоменклатураДонор;
			Движение.СерийныйНомер     = Справочники.СерийныеНомера.НайтиПоКоду(СокрЛП(СерийныйНомерДонор),,,НоменклатураДонор);
			Движение.Номенклатура      = ТекСтрокаСнятыеЧасти.Номенклатура;
			Движение.КодСтроки         = ТекСтрокаСнятыеЧасти.КодСтроки;
			Движение.Количество        = ТекСтрокаСнятыеЧасти.Количество;	
		КонецЕсли;
	КонецЦикла;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
	Движения._ГарантийныеЗапросы.Записать();
	Движения._ЗапросыПоставщику.Записать();
	Движения._НекомплектныеМашины.Записать();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(НоменклатураДонор) Тогда 
		ПроверяемыеРеквизиты.Добавить("Дилер");
		ПроверяемыеРеквизиты.Добавить("МодельМашины");
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Статус = Перечисления._СтатусГарЗапроса.Рассмотрен;
	Для Каждого Строка Из Товары Цикл 
		Если Не ЗначениеЗаполнено(Строка.РезультатРассмотрения) Тогда 
			Статус = Перечисления._СтатусГарЗапроса.ВПроцессе;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	_Кирилл.УстановитьКлючВСтрокахТабличнойЧасти(ЭтотОбъект, "СнятыеЧасти", "МаксКодСтрокиСнятыеЧасти");
	
КонецПроцедуры

