
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Рекламация_Заголовок = "Акт-рекламация №" + СокрЛП(Объект.Номер) + " от: " + Формат(Объект.Дата, "ДФ=dd.MM.yy"); 
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
		Объект.Рекламация_Составлена      = Строка(ТекПользователь);
		Объект.Рекламация_ПредставительСЦ = Строка(ТекПользователь);
		Объект.Ответственный              = ТекПользователь;
	КонецЕсли;
	
	КаталогФайлов = "\\Wan-russ2\RUS_DatiALL\MG-Russia\All users\1C service data\WC\";
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда 
		Объект.Файлы.Очистить();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция   ЗаполнитьПоставщикаСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ТоварыНаСкладахОбороты.КоличествоПриход, 0) КАК Приход,
	|	ТоварыНаСкладахОбороты.Номенклатура,
	|	ТоварыНаСкладахОбороты.Регистратор.Контрагент КАК Контрагент
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Обороты(, , Регистратор, СерияНоменклатуры.СерийныйНомер.Код = &СерийныйНомер) КАК ТоварыНаСкладахОбороты
	|ГДЕ
	|	ТоварыНаСкладахОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг";
	
	Запрос.УстановитьПараметр("СерийныйНомер", СокрЛП(Объект.СерийныйНомер));
	Выборка = Запрос.Выполнить().Выбрать();
	
	Объект.Поставщик = ?(Выборка.Следующий(), Выборка.Контрагент, Неопределено);
	
КонецФункции

&НаСервере
Процедура ИнициализироватьСервер()
	
	Объект.Поставщик        = Неопределено;
	Объект.Дилер            = Неопределено;
	Объект.НомерДокОтгрузки = "";
	Объект.ДатаОтгрузки     = '00010101';
	Объект.МодельМашины     = Неопределено;
	Объект.ГодВыпуска       = "";
	Объект.МестоНахождения  = Неопределено;
	Объект.СтатусМашины     = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура АвтоопределениеСервер(Рез)
	
	Структура = ПолучитьИзВременногоХранилища(Рез);
	Объект.МодельМашины     = Структура.Номенклатура;
	Объект.Дилер            = Структура.Контрагент;
	Объект.МестоНахождения  = Структура.Склад;
	Объект.НомерДокОтгрузки = Структура.ДокументНомер;
	Объект.ДатаОтгрузки     = Структура.ДокументДата;
	Объект.ГодВыпуска       = "20" + Лев(Объект.СерийныйНомер, 2);
	Объект.ДокументОтгрузкиСсылка = Структура.Документ;
	
	Если ЗначениеЗаполнено(Объект.МестоНахождения) Тогда 
		Если Объект.МестоНахождения._СкладОтветственногоХранения Тогда 
			Объект.СтатусМашины = Перечисления._СтатусМашины.НаХранении;
			Объект.Дилер = Объект.МестоНахождения._Контрагент;
		Иначе
			Объект.СтатусМашины = Перечисления._СтатусМашины.НаСкладе;
		КонецЕсли;
	КонецЕсли;
	
	Если Структура.Свойство("Продана") Тогда
		Объект.СтатусМашины = Перечисления._СтатусМашины.Продана;
	КонецЕсли;
	
	ЗаполнитьПоставщикаСервер();
	
	ДилерПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СерийныйНомерПриИзменении(Элемент)
	
	ИнициализироватьСервер();
	Если ЗначениеЗаполнено(Объект.СерийныйНомер) Тогда 
		Рез = ОткрытьФормуМодально("Документ._ГарантийныйЗапрос.Форма._УпоДопФормаСостоянияМашины", Новый Структура("СерийныйНомер", СокрЛП(Объект.СерийныйНомер)));
		Если Не Рез = Неопределено Тогда 
			АвтоопределениеСервер(Рез);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииДилера()
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Если ЗначениеЗаполнено(ДокОбъект.Дилер) Тогда 
		Сведения = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДокОбъект.Дилер, ТекущаяДата());
		ДокОбъект.Рекламация_Адрес = ФормированиеПечатныхФорм.ОписаниеОрганизации(Сведения, "ФактическийАдрес,Телефоны");
	Иначе
		ДокОбъект.Рекламация_Адрес = "";	
	КонецЕсли;
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура СерийныйНомерДонорПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.СерийныйНомер) Тогда 
		Рез = ОткрытьФормуМодально("Документ._ГарантийныйЗапрос.Форма._УпоДопФормаСостоянияМашины", Новый Структура("СерийныйНомер", СокрЛП(Объект.СерийныйНомерДонор)));
		Если Не Рез = Неопределено Тогда
			СерийныйНомерДонорПриИзмененииСервер(Рез);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СерийныйНомерДонорПриИзмененииСервер(Рез)

	Структура = ПолучитьИзВременногоХранилища(Рез);	
	Объект.НоменклатураДонор    = Структура.Номенклатура;
	Объект.МестонахождениеДонор = Структура.Склад;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВидаЗапроса()
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Если ДокОбъект.ВидЗапроса = Перечисления._ВидыГарантийныхЗапросов.Недопоставка Тогда 
		Если Не ЗначениеЗаполнено(ДокОбъект.Комментарий) Тогда 
			ДокОбъект.Комментарий = "Недопоставка/Missing parts";
		КонецЕсли;
	Иначе
		Если СокрЛП(ДокОбъект.Комментарий) = "Недопоставка/Missing parts" Тогда 
			ДокОбъект.Комментарий = "";	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.ПричинаНеисправности) Тогда 
		Элемент.ТекущиеДанные.ПричинаНеисправности = Объект.Комментарий;
		Элемент.ТекущиеДанные.ЕстьКартинка = 1;
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает ссылку на текущую строку в списке товаров 
// 
// Параметры: 
//  Нет. 
// 
// Возвращаемое значение: 
//  СправочникСсылка.Товары - Текущий товар в списке.
&НаКлиенте
Функция   ПолучитьТекущуюСтрокуТовары()
	
	Возврат Элементы.Товары.ТекущиеДанные;
	
КонецФункции

&НаСервере
Функция   ПолучитьНоменклатуруПоВнешнемуКоду(ВнешнийКод)
	
	Возврат Справочники.Номенклатура.НайтиПоКоду(ВнешнийКод);
	
КонецФункции

&НаКлиенте
Процедура ТоварыВнешнийКодПриИзменении(Элемент)
	
	Стр = ПолучитьТекущуюСтрокуТовары();
	ВнешнийКод = Стр.ВнешнийКод;
	Если ЗначениеЗаполнено(ВнешнийКод) Тогда 
		Нменклатура = ПолучитьНоменклатуруПоВнешнемуКоду(ВнешнийКод);
		Стр.Номенклатура = Нменклатура;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	#Если ВебКлиент ИЛИ WebClient Тогда
		Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
			УстановитьРасширениеРаботыСФайлами();
			ПодключитьРасширениеРаботыСФайлами();
		КонецЕсли;
	#КонецЕсли
	
	Путь = КаталогФайлов;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для прикрепления файлов документ необходимо записать";
		Сообщение.Сообщить();
	Иначе
		Ид = Объект.Ссылка.УникальныйИдентификатор();
		
		//Выбираем файл
		Режим = РежимДиалогаВыбораФайла.Открытие;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.МножественныйВыбор = Истина;
		ДиалогОткрытияФайла.ПолноеИмяФайла     = "";
		Текст = "ru = ""Выберите файлы""; en = ""Choice the files please""";
		ДиалогОткрытияФайла.Заголовок = "Выберите файлы";
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
			Для Каждого ИмяФайла Из МассивФайлов Цикл
				ВыбФайл = Новый Файл(ИмяФайла);
				КопироватьФайл(ИмяФайла, Путь + Ид + Строка(Объект.Файлы.Количество() + 1) + ВыбФайл.Расширение);
				Новая = Объект.Файлы.Добавить();
				Новая.ИмяФайла        = ВыбФайл.Имя;
				Новая.Расширение      = ВыбФайл.Расширение;
				Новая.Размер          = Цел(ВыбФайл.Размер()/1000);
				Новая.ВключатьВПисьмо = Истина;
			КонецЦикла;
		Иначе
			Текст = "ru = ""Файл(ы) не выбран!""; en = ""File(s) not selected!""";
			Предупреждение(НСтр(Текст));
		КонецЕсли;
		
	КонецЕсли;
	
	Отказ = Истина;
	
	РассчитатьРазмерФайловСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	#Если ВебКлиент ИЛИ WebClient Тогда
		Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
			УстановитьРасширениеРаботыСФайлами();
			ПодключитьРасширениеРаботыСФайлами();
		КонецЕсли;
	#КонецЕсли
	
	Путь = КаталогФайлов;
	ТекДанные = Элемент.ТекущиеДанные;
	Если НЕ ТекДанные = Неопределено Тогда 
		Если ЗначениеЗаполнено(ТекДанные.Расширение) Тогда 
			Если Элемент.ТекущийЭлемент.Имя = "ФайлыИмяФайла" Тогда 
				Попытка
					Ид = Объект.Ссылка.УникальныйИдентификатор();
					ПутьФайла = Путь + ИД + ТекДанные.НомерСтроки + ТекДанные.Расширение;
					ЗапуститьПриложение(ПутьФайла);
				Исключение
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Не удалось открыть файл " + ОписаниеОшибки();
					Сообщение.Сообщить();
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	
	Путь = КаталогФайлов;
	ТекДанные = Элементы.Файлы.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда 
		Ид = Объект.Ссылка.УникальныйИдентификатор();
		ПутьФайла = Путь + ИД + ТекДанные.НомерСтроки + ТекДанные.Расширение;
		Попытка
			УдалитьФайлы(ПутьФайла);
			ТекДанные.Расширение      = "";
			ТекДанные.Размер          = 0;
			ТекДанные.ВключатьВПисьмо = Ложь;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	РассчитатьРазмерФайловСервер();

КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьРазмерФайловСервер()
	
	ОбщийРазмер = 0;
	Документ = РеквизитФормыВЗначение("Объект");
	Для Каждого Строка Из Документ.Файлы Цикл 
		Если Строка.ВключатьВПисьмо Тогда 
			ОбщийРазмер = ОбщийРазмер + Строка.Размер;		
		КонецЕсли;
	КонецЦикла;
	Документ.ОбщийРазмерФайлов = Цел(ОбщийРазмер/1000);
	ЗначениеВРеквизитФормы(Документ, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьРазмерФайловСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура НеисправностьОписаниеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаРедТекст = ПолучитьФорму("ОбщаяФорма._УпрФормаРедТекста", Новый Структура("РедТекст", Объект.НеисправностьОписание), ЭтаФорма, Истина);
	ФормаРедТекст.ОткрытьМодально();
	Объект.НеисправностьОписание = ФормаРедТекст.РедТекст;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаРедТекст = ПолучитьФорму("ОбщаяФорма._УпрФормаРедТекста", Новый Структура("РедТекст", Объект.Комментарий), ЭтаФорма, Истина);
	ФормаРедТекст.ОткрытьМодально();
	Объект.Комментарий = ФормаРедТекст.РедТекст;

КонецПроцедуры

&НаКлиенте
Процедура ПримечаниеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаРедТекст = ПолучитьФорму("ОбщаяФорма._УпрФормаРедТекста", Новый Структура("РедТекст", Объект.Примечание), ЭтаФорма, Истина);
	ФормаРедТекст.ОткрытьМодально();
	Объект.Примечание = ФормаРедТекст.РедТекст;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииТоварыСервер()

	Документ = РеквизитФормыВЗначение("Объект");
	Для Каждого Строка Из Документ.Товары Цикл 
		Строка.ЕстьКартинка = 1;
		Если ЗначениеЗаполнено(Строка.Номенклатура._ПутьКартинка) Тогда 
			Строка.ПутьККартинке = Строка.Номенклатура._ПутьКартинка;	
			Строка.ЕстьКартинка = 0;
		КонецЕсли;
	КонецЦикла;
	ЗначениеВРеквизитФормы(Документ, "Объект");

КонецПроцедуры // ПриИзмененииТоварыСервер()

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	//ПриИзмененииТоварыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиКартинки(Команда)
	
	ПриИзмененииТоварыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыНомерСтроки" Тогда 
		Попытка
			ЗапуститьПриложение(Элемент.ТекущиеДанные.ПутьККартинке);
		Исключение
		КонецПопытки;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СитуацияПоЗапросуОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаРедТекст = ПолучитьФорму("ОбщаяФорма._УпрФормаРедТекста", Новый Структура("РедТекст", Объект.СитуацияПоЗапросу), ЭтаФорма, Истина);
	ФормаРедТекст.ОткрытьМодально();
	Объект.СитуацияПоЗапросу = ФормаРедТекст.РедТекст;

КонецПроцедуры

&НаКлиенте
Процедура ВсеОдобрена(Команда)
	
	ВсеОдобренаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВсеОдобренаНаСервере()
	
	Для Каждого Строка Из Объект.Товары Цикл 
		Строка.РезультатРассмотрения = Перечисления._РезультатыРассмотренияГарантии.Одобрена;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеОтклонена(Команда)
	
	ВсеОтклоненаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВсеОтклоненаНаСервере()
	
	Для Каждого Строка Из Объект.Товары Цикл 
		Строка.РезультатРассмотрения = Перечисления._РезультатыРассмотренияГарантии.Отклонена;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиДокОтгрузки(Команда)
	
	ОткрытьЗначение(Объект.ДокументОтгрузкиСсылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	НаборЗаписей = РегистрыСведений._КомментарииТЧТовары.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(ТекущийОбъект.Ссылка);
	НаборЗаписей.Записать();
	
	//Комментарии строк
	Для Каждого Строка Из ТекущийОбъект.СнятыеЧасти Цикл 
		Если ЗначениеЗаполнено(Строка.НоменклатураСтрокой) Тогда 
			
			НаборЗаписей = РегистрыСведений._КомментарииТЧТовары.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(ТекущийОбъект.Ссылка);
			НаборЗаписей.Отбор.КодСтроки.Установить(Строка.КодСтроки);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Документ = ТекущийОбъект.Ссылка;
			НоваяЗапись.КодСтроки = Строка.КодСтроки;
			
			НоваяЗапись.Комментарий = Строка.НоменклатураСтрокой;
			
			НаборЗаписей.Записать();
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураДонорПриИзменении(Элемент)
	
	Объект.СерийныйНомерДонор = "";
	
КонецПроцедуры

&НаКлиенте
Процедура СнятыеЧастиВозвращеноПриИзменении(Элемент)
	
	ТекДанные = Элементы.СнятыеЧасти.ТекущиеДанные;
	Если ТекДанные.Возвращено Тогда 
		ТекДанные.ДатаВозврата = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятыеЧастиНоменклатураСтрокойПриИзменении(Элемент)
	
	ТекДанные = Элементы.СнятыеЧасти.ТекущиеДанные;
	ТекДанные.Номенклатура = ПолучитьСлужебнуюНоменклатуруСервер();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   ПолучитьСлужебнуюНоменклатуруСервер()

	Возврат _Кирилл.ПолучитьЗначениеПараметра("СервиснаяНоменклатурнаяПозицияКорп");

КонецФункции

&НаКлиенте
Процедура СнятыеЧастиНоменклатураПриИзменении(Элемент)
	
	ТекДанные = Элементы.СнятыеЧасти.ТекущиеДанные;
	ТекДанные.НоменклатураСтрокой  = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ДилерПриИзменении(Элемент)
	
	ДилерПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ДилерПриИзмененииСервер()

	Объект.Рекламация_адрес = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Объект.Дилер, Объект.Дата), "ЮридическийАдрес");	

КонецПроцедуры






