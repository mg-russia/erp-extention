
Процедура ЗаполнитьДокументСервер(Документ) Экспорт
	
	Документ.Товары.Очистить();
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	_ТоварыНаХраненииОстатки.Номенклатура,
	//|	_ТоварыНаХраненииОстатки.СерияНоменклатуры,
	//|	_ТоварыНаХраненииОстатки.Склад КАК Склад,
	//|	_ТоварыНаХраненииОстатки.ДоговорХранения КАК ДоговорХранения,
	//|	_ТоварыНаХраненииОстатки.КоличествоОстаток КАК Количество,
	//|	_ТоварыНаХраненииОстатки.СуммаОстаток КАК Сумма
	//|ИЗ
	//|	РегистрНакопления._ТоварыНаХранении.Остатки(&ДатаСверки, Склад._Контрагент = &Контрагент) КАК _ТоварыНаХраненииОстатки
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Склад,
	//|	ДоговорХранения,
	//|	_ТоварыНаХраненииОстатки.Номенклатура.ВестиСерийныеНомера УБЫВ,
	//|	_ТоварыНаХраненииОстатки.Номенклатура.Код";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Склад
	               |ПОМЕСТИТЬ ВтСклады
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаСверки, Склад._Контрагент = &Контрагент) КАК ТоварыНаСкладахОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыНаСкладахОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	               |	_ТоварыНаХраненииОстатки.ДоговорХранения КАК ДоговорХранения,
	               |	МАКСИМУМ(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КолСклад,
	               |	МАКСИМУМ(ЕСТЬNULL(_ТоварыНаХраненииОстатки.КоличествоОстаток, 0)) КАК КолХранение,
	               |	СУММА(0) КАК Подобрано,
	               |	СУММА(0) КАК КолБезДоговоров,
	               |	ТоварыНаСкладахОстатки.Склад,
	               |	МАКСИМУМ(_ТоварыНаХраненииОстатки.СуммаОстаток) КАК Сумма
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			&ДатаСверки,
	               |			Склад В
	               |				(ВЫБРАТЬ
	               |					ВтСклады.Склад
	               |				ИЗ
	               |					ВтСклады КАК ВтСклады)) КАК ТоварыНаСкладахОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления._ТоварыНаХранении.Остатки(
	               |				&ДатаСверки,
	               |				Склад В
	               |					(ВЫБРАТЬ
	               |						ВтСклады.Склад
	               |					ИЗ
	               |						ВтСклады КАК ВтСклады)) КАК _ТоварыНаХраненииОстатки
	               |		ПО ТоварыНаСкладахОстатки.Номенклатура = _ТоварыНаХраненииОстатки.Номенклатура
	               |			И ТоварыНаСкладахОстатки.Склад = _ТоварыНаХраненииОстатки.Склад
	               |			И ТоварыНаСкладахОстатки.СерияНоменклатуры = _ТоварыНаХраненииОстатки.СерияНоменклатуры
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ТоварыНаСкладахОстатки.СерияНоменклатуры,
	               |	_ТоварыНаХраненииОстатки.ДоговорХранения,
	               |	ТоварыНаСкладахОстатки.Склад
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДоговорХранения,
	               |	СерияНоменклатуры УБЫВ";
	
	//Запрос.УстановитьПараметр("Склад", Объект.Склад);
	
	Запрос.УстановитьПараметр("Контрагент", Документ.Контрагент);
	Запрос.УстановитьПараметр("ДатаСверки", Новый Граница(КонецДня(Документ.ДатаСверки), ВидГраницы.Включая));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Новая = Документ.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(Новая, Выборка);
		Если Не ЗначениеЗаполнено(Выборка.КолХранение) Тогда 
			Новая.Количество = Выборка.КолСклад;
		Иначе
			Новая.Количество   = Выборка.КолХранение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция   ПечатьАктСверки(Документ) Экспорт
	
	Организация = _Кирилл.ПолучитьЗначениеПараметра("ОсновнаяОрганизация");
	
	Коллекции = _Кирилл.ИнициализироватьКоллекцииПечати();
	
	ТекОбл = _Кирилл.СоздатьЭкземплярОбласти(Коллекции, "ОблЗагСтр"); 
	ТекОбл.Параметры.Заполнить(Новый Структура("ТипДокумента, НомерДокумента, ДатаДокумента", ВРег("Акт сверки по переданным товарам"), ОбщегоНазначения.ПолучитьНомерНаПечать(Документ), Формат(Документ.ДатаСверки, "ДФ=dd.MM.yyyy")));
	_Кирилл.ДобавитьОбластьВТз(Коллекции, ТекОбл);
	
	Коллекции.ОблЗагСтр = ТекОбл;

	ТекОбл = _Кирилл.СоздатьЭкземплярОбласти(Коллекции, "СверкаСкладКонтрагенты");	
	ТекОбл.Параметры.Отправитель  = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Документ.ДатаСверки), "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	ТекОбл.Параметры.Получатель = СокрЛП(Документ.Контрагент.Код) + Символы.ПС + ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Документ.Контрагент, Документ.ДатаСверки), "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	
	//Кирилл //ШтрихКодирование Начало
	ВнешняяКомпонента = _ШтрихКодирование.ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	ВидОбъектаДляШк = "24";
	СквознойНомер = _ШтрихКодирование.ПолучитьСквознойНомерОбъекта(Документ);
	Если Не СквознойНомер = "" Тогда 
		_ШтрихКодирование.ДополнитьСквознойНомерОбъектаЛидНулями(СквознойНомер);
		ТекОбл.Рисунки.D1.Картинка = _Кирилл.ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, 1, ВидОбъектаДляШк + СквознойНомер, 100, 50); 
	КонецЕсли;
	//Кирилл //ШтрихКодирование Конец
	
	_Кирилл.ДобавитьОбластьВТз(Коллекции, ТекОбл);

	_Кирилл.Сзв(Коллекции, "СверкаСкладШапкаТаб");
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.ДоговорХранения,
	|	Товары.СерияНоменклатуры,
	|	Товары.Количество,
	|	Товары.Сумма,
	|	Товары.Склад
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&Тз КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.Номенклатура,
	|	ВтТовары.ДоговорХранения КАК ДоговорХранения,
	|	ВтТовары.СерияНоменклатуры,
	|	ВтТовары.Количество,
	|	ВтТовары.Сумма,
	|	ВтТовары.Склад КАК Склад
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|ИТОГИ ПО
	|	Склад,
	|	ДоговорХранения";
	
	Запрос.УстановитьПараметр("Тз", Документ.Товары.Выгрузить());
	
	Результат = Запрос.Выполнить();
	ВыборкаСклад = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСклад.Следующий() Цикл
		//Сообщить(ВыборкаСклад.Склад);
		_Кирилл.Сзв(Коллекции, "СверкаСкладАдресНахождения", Новый Структура("Адрес", ВыборкаСклад.Склад._АдресСклада));
		ВыборкаДоговор = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДоговор.Следующий() Цикл 
			_Кирилл.Сзв(Коллекции, "СверкаСкладДоговор", Новый Структура("Договор", ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаДоговор.ДоговорХранения) + ?(ЗначениеЗаполнено(ВыборкаДоговор.ДоговорХранения), " от ", "") + Формат(ВыборкаДоговор.ДоговорХранения.Дата, "ДФ=dd.MM.yyyy")));	
			ВыборкаНом = ВыборкаДоговор.Выбрать();
			Пока ВыборкаНом.Следующий() Цикл
				Наименование = ВыборкаНом.Номенклатура.НаименованиеПолное;
				Если ЗначениеЗаполнено(ВыборкаНом.СерияНоменклатуры) Тогда 
					Наименование = Наименование + ", sn " + ВыборкаНом.СерияНоменклатуры.Наименование;	
				КонецЕсли;
				_Кирилл.Сзв(Коллекции, "СверкаСкладТовары", Новый Структура("Код, Наименование, Количество, Сумма, Валюта", 
				ВыборкаНом.Номенклатура.Код, Наименование, ВыборкаНом.Количество, ВыборкаНом.Сумма, ВыборкаДоговор.ДоговорХранения.ВалютаДокумента));
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
	_Кирилл.Сзв(Коллекции, "СверкаСкладРаспорка");

	Мас = Справочники.Контрагенты.ПолучитьПодпись(Документ.Контрагент);
	Парам = Новый Структура("Парам1, Парам11, Парам111, Парам2, Парам22, Парам222", Организация.НаименованиеПолное, "Соколенко П.А.", "Заместитель ген. директора", Документ.Контрагент.НаименованиеПолное, ?(Мас.Количество() > 0, Мас[1], ""), ?(Мас.Количество() > 0, Мас[0], ""));
	_Кирилл.Сзв(Коллекции, "СверкаСкладПодписи", Парам);
	
	_Кирилл.ОбработатьТзОбластей(Коллекции);
	_Кирилл.ВывестиОбластиВТабДок(Коллекции);
	
	Возврат Коллекции.ТабДок;
	
КонецФункции
